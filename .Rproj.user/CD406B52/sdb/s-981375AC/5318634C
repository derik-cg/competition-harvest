{
    "contents" : "#this files simulates a community of five populations competing\n#according to the Lotka-Volterra assumptions.\n#the objective is to try intransitive topologies of the\n#competition network\n#this applies laird et al 2009 on a lv system\n\n#The objective of this file is to explore ASYMETTRIC deviations\n#in alphas from the ratio k1/k2 and k2/k1 in relation to the numerical\n#value of the equilibrium. Only BIG alpha will be enlarged in a wide interval\n\nlibrary(deSolve)\nrm(list=ls())\n\n#the size of the system is \nsize<-5\n\n# define the parameter vectors\nrs<-rep(0.5,size) #growth rates\nks<-rep(100,size) #carrying capacities\n\n#define alphas zeros indicate no interaction\nalphas<-matrix(0,nrow=size,ncol=size) #competition coefs.\n\n#define the state variables (populations) and their initial conditions are\n#since this is a matrix notation system, use a named vector for \n#graphing purposes.\nstate<-rep(c(20,20), length.out=size)\nnames(state)<-paste(\"N\",1:size,sep=\"\")\n\n#define the differential equaiton\nlvccmat<-function(t,Y,parameters)\n{\n  y<- Y #transform Y in a local vector\n  #use the local vector to construct the system of ODEs\n  #and assign it to the vector of ODEs\n  dY<- rs*y - (rs*y^2 + rs*colSums(outer(y,y,FUN =\"*\")*alphas))*(1/ks)\n  #return the whole vector for the output\n  return(list(dY))\n}\n#define function that measures amplitude of oscillations\namplitude<-function(mat)\n{\n  mx<-apply(mat,2,max)\n  mn<-apply(mat,2,min)\n  dife<-mx-mn\n  return(dife)\n}\n\n#define the vector of output times\ntimes<-seq(from=0,to=1000,by=0.5)\n\n#initialize output of oscilations\nout.osc<-c(dist=NA,eq1=NA,eq2=NA,eq3=NA,eq4=NA,eq5=NA,N1=NA,N2=NA,N3=NA,N4=NA,N5=NA)\n## start a loop for the symmetrical differences\ndistseq<-seq(from=0, to=20, length.out = 50)\nfor (i in distseq)\n{\n  #to assign the competition coefficients, it was assumed \n  #pairwise competitions in competitive exclussion\n  #then if A->B kB/kA < alpha21 and  kB/kA > alpha12\n  #        A<-B kB/kA > alpha21  and kA/kB < alpha12\n  #        ####       #                    #\n  ##alpha[1,1]<- 0\n  big<-1+i\n  sma<-1-0.5\n  alphas[1,2]<- big # 1->2\n  alphas[2,1]<- sma ##1->2  \n  alphas[1,3]<- big # 1->3\n  alphas[3,1]<- sma ##1->3\n  alphas[1,4]<- sma # 1<-4\n  alphas[4,1]<- big ##1<-4\n  alphas[1,5]<- sma # 1<-5\n  alphas[5,1]<- big ##1<-5\n  ##  alpha[2,2]<- 0\n  alphas[2,3]<- big # 2->3\n  alphas[3,2]<- sma ##2->3\n  alphas[2,4]<- big # 2->4\n  alphas[4,2]<- sma ##2->4\n  alphas[2,5]<- sma # 2<-5\n  alphas[5,2]<- big ##2<-5\n  ##  a33<-0\n  alphas[3,4]<- big # 3->4\n  alphas[4,3]<- sma ##3->4\n  alphas[3,5]<- big #3 ->5\n  alphas[5,3]<- sma ##3->5\n  ##  a44<-0\n  alphas[4,5]<- big # 4->5\n  alphas[5,4]<- sma ##4<-5\n  #alphas[5,5]<-0\n  \n  \n  #gather all parameters in a list\n  parameters<-list(rs=rs,\n                   ks=ks,\n                   alphas=alphas)\n  \n  \n  #now do the simulation\n  \n  out<-ode(y=state,times=times,func=lvccmat)\n  #this plots the output\n  #plot(out)\n  # take the last 50 rows\n  last<-out[1550:2000,2:6]\n  #measure for oscillations\n  ampl<-amplitude(last)\n  #estimate equilibria with average\n  avg<-apply(last,2,mean)\n  #name the entries of the vector#\n  names(avg)<-c(\"eq1\",\"eq2\",\"eq3\",\"eq4\",\"eq5\")\n  #associate dist, equilibria and amplitude\n  osc<-c(dist=i,avg,ampl)\n  \n  out.osc<-rbind(out.osc,osc)\n}\n#eliminate fist row\nnum<-dim(out.osc)\nout.osc<-out.osc[2:(num[1]),]\n#this plot relates the distance to the equilibrium point.\nplot((out.osc[,1]),out.osc[,2])\n",
    "created" : 1456269648422.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3080195051",
    "id" : "5318634C",
    "lastKnownWriteTime" : 1456272730,
    "path" : "C:/Users/Derik/Documents/harvest/R/lvccGreatAlpha.R",
    "project_path" : "lvccGreatAlpha.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}