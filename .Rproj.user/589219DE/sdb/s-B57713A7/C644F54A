{
    "contents" : "#this files simulates an arbrtrary (>2) number of competing populations\n# using matrix notation for the differential equations. No harvest\n\nlibrary(deSolve)\nrm(list=ls())\n# define the parameter vector\n\nrs<-c(0.2,0.5) #growth rates\nks<-c(100,100) #carrying capacities\nalphas<-matrix(c(0, 0.9, 0.1, 0),nrow=2,byrow = T) #competition coefs.\n\n#the size of the system is \nsize<-length(rs)\n\n#define the state variables (populations) and their initial conditions are\n#since this is a matrix notation system, no not use names\nstate<-rep(10, size)\n\n#gather all parameters in a list\nparameters<-list(rs=rs,\n              ks=ks,\n              alphas=alphas,\n              size=size)\n\n#define the vector of output times\ntimes<-seq(from=0,to=100,by=0.5)\n\n#define the differential equation\n\nlvccmat<-function(t,Y,parameters)\n{\n  y<- Y #transform Y in a local vector\n  #use the local vector to construct the system of ODEs\n  dY<- rs*y - (rs*y^2 + rs*colSums(outer(y,y,FUN =\"*\")*alphas))*(1/ks)\n  return(list(dY))\n}\n\n#now do the simulation\n\nout<-ode(y=state,times=times,func=lvccmat)\nplot(out)\n",
    "created" : 1455163626031.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "906156239",
    "id" : "C644F54A",
    "lastKnownWriteTime" : 1455222289,
    "path" : "~/harvest/R/lvccmat.R",
    "project_path" : "lvccmat.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}